"""
The result of the attempt.
"""
type AttemptResult {
    id: ID
    results: [CodeExecutionResult!]!
    createdAt: String!
}

"""
An attempt to a question.
"""
type Attempt {
    id: ID!
    user: User!
    question: Question!
    # TODO: consider change to file type with name to support multi file code execution
    code: String
    isSubmitted: Boolean!
    result: AttemptResult  # only stores submitted result
    createdAt: String!
    updatedAt: String!
    executedAt: String
}

extend type Query {
    """
    Get an attempt by ID.
    """
    attempt(attemptId: ID): Attempt

    """
    Get all attempts of a question from the current user.
    """
    attempts(questionId: ID!): [Attempt!]!

    """
    Get the latest submission of a question from the specified user.
    """
    latestSubmission(userId: ID!, questionId: ID!): Attempt
}

extend type Mutation {
    """
    Create a new attempt.
    """
    createAttempt(attemptInput: CreateAttemptInput!): Attempt!

    """
    Update an existing attempt.
    """
    updateAttempt(attemptId: ID!, attemptInput: UpdateAttemptInput!): Attempt!
}

input CreateAttemptInput {
    questionId: ID!
    code: String
}

input UpdateAttemptInput {
    code: String
}
